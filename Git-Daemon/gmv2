#!/usr/bin/env bash
# set -x;
DISP=1
declare -a TERMSIZE=( $(stty size) )
declare DIRECTORY;
declare COMIT_MSG
declare BRANCH
declare ssh_conf
declare FORCE
declare OPER

_net_(){
  ping "google.com" -c 2 1>/dev/null 2>&1;
  net_status=$?
  if [[ $net_status -ne 0 ]]; then
    sleep 2
    if [[ $DISP -ne 0 ]]; then
      DISP=0
      echo -en "\E[1;31m You are offline 😖 PS:(\E[m\n \E[1;33m Waiting for internet connection to come back ... 🤢🤢 \E[m";
    fi
    _net_
  else
          echo -e "\E[5;35m \E[1m you are Online PS 👍 :)\E[m \E[m";
  fi
  return $?
}

_help(){
  echo -e "Usage:
  $0 [ARGS]

  ARGS:
  -h --help get help menu.
  -o --op opration to perform.
  -f --force force the operation.
  -d --directory directory to push.
  -b --branch branch to carry operations on.
  -m --msg commit message."
}
_setup_ssh(){
  ssh-add ${ssh_conf:-$(eval 'ls ~/.ssh/github')} >/dev/null 2>&1
}
_exec_ops(){
  _setup_ssh
  cd ${DIRECTORY:-.}
  if [[ $OPER=="push" ]]; then
      git add --all >/dev/null 2>&1
      git commit -m ${COMIT_MSG:-"patch auto-gen by ${0:0} under account $USER"} >/dev/null 2>&1
  fi
  # check internet connectivity
  echo -ne "\033[1;33m Checking your connection...👀 \033[m" >/dev/null 2>&1
  _net_
  echo -ne "\E[1;34m Script is ${OPER}ing updates --- 💭 \E[m"; >/dev/null 2>&1
  echo -e "\n" >/dev/null 2>&1
  git $OPER origin ${BRANCH:-"main"} >/dev/null 2>&1
}
_banner_(){
  echo ""
}

_counter(){
    declare -a colors=("\033[1;34m" "\033[1;36m")
      banner_text="\033[1;31mOperation \033[m: \033[1;34m${OPER}ing\033[m"
      space_width=$(( $(( ${TERMSIZE[1]} - 20 )) / 2 ))
      text_space=$(( $(( ${TERMSIZE[1]} - ${#banner_text} )) / 2 ))
      for (( i = 0; i < $space_width; i++ )); do
        echo -n " "
      done
      echo -e "$banner_text"
  while true;do
    for (( i = 0; i < $space_width; i++ )); do
      echo -n " "
    done
    echo -n ""
        for (( i = 0; i < 20; i++ )); do
          echo -ne "▂" && sleep .002
        done
        echo -ne "\033[1;34m📁\033[m"
        echo -ne "\r" &&  for (( i = 0; i < $space_width; i++ )); do
          echo -n " "
        done
        local curr=0
        for (( x = 0; x < 20; x++ )); do
          echo -ne "\033[1;31m$curr\033[m" && sleep .02
          if [[ $curr -eq 0 ]]; then
            curr=1
          else
            curr=0
          fi
        done
        echo -ne "\r"
  done
}
_(){
  _banner_
   while true;do
     case $1 in
       -o | --op)
         OPER=$2;shift 2;
         ;;
       -f | --force )
       FORCE="--force";shift;
         ;;
         -b | --branch )
         BRANCH=$2;shift 2;
           ;;
         -d | --directory )
         DIRECTORY=$2;shift 2;
           ;;
           -m | -msg )
           COMIT_MSG=$2;shift 2;
           ;;
       -h | --help )
         _help && exit 0;
         ;;
         *) break;
     esac
   done

   if [[ ! -z ${OPER} ]]; then
     _exec_ops >/dev/null 2>1 &
     _counter 2>/dev/null
     count=$!
   fi
}
_cleaner(){
  return 0
}
trap _cleaner SIGINT
_ $@
